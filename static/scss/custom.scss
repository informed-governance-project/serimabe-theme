// Custom.scss
// Option A: Include all of Bootstrap

// Include any default variable overrides here (though functions won't be available)

// ILR Colors

// $primary: #e40521;
// $secondary: #212529; 

// IBPT Colors
$primary: #34a9e1;
$secondary: #2e2f7f; 

@import "../../../node_modules/bootstrap/scss/functions";
@import "../../../node_modules/bootstrap/scss/variables";

// Custom Colors
$no-impact: #CCCCCC;
$impact: #e40521;
$closed: #666666;
$ongoing: #008800;
$passed: #008800;
$failed: #e40521;
$under-review: #727272;
$late-under-review: #5B1B8F;
$unsubmitted: #2673e5;
$overdue: #e40521;
$dark-gray: #4c4c4c;

$custom-colors: (
    "no-impact": $no-impact,
    "impact": $impact,
    "closed": $closed,
    "ongoing": $ongoing,
    "passed": $passed,
    "failed": $failed,
    "under-review": $under-review,
    "late-under-review": $late-under-review,
    "unsubmitted": $unsubmitted,
    "overdue": $overdue,
    "dark-gray": $dark-gray,
);

$theme-colors: map-merge($theme-colors, $custom-colors);

$custom-colors-rgb: (
);

@each $name, $color in $custom-colors {
    $custom-colors-rgb: map-merge($custom-colors-rgb,
            ($name: to-rgb($color)));
}

@import "../../../node_modules/bootstrap/scss/_maps";
@import "../../../node_modules/bootstrap/scss/utilities";

$utilities: map-merge($utilities, ("width": map-merge(map-get($utilities, "width"), (responsive: true))));
$utilities: map-merge($utilities, ("height": map-merge(map-get($utilities, "height"), (responsive: true))));

$utilities: map-merge($utilities,
        ("width": map-merge(map-get($utilities, "width"),
                (values: map-merge(map-get(map-get($utilities, "width"), "values"),
                        (1: 1%,
                            2: 2%,
                            3: 3%,
                            4: 4%,
                            5: 5%,
                            10: 10%,
                            15: 15%,
                            20: 20%,
                            30: 30%,
                            35: 35%,
                            40: 40%,
                            45: 45%,
                            48: 48%,
                            49: 49%,
                            55: 55%,
                            60: 60%,
                            65: 65%,
                            70: 70%,
                            80: 80%,
                            85: 85%,
                            90: 90%,
                            95: 95%,
                        ),
                    ),
                ),
            ),
        ));

@font-face {
    font-family: Montserrat;
    src: url("../fonts/Montserrat/Montserrat-VariableFont_wght.ttf");
}


// Importing bootstrap
@import "../../../node_modules/bootstrap/scss/bootstrap";

// To compile scss file, run this command at root project ** npm run compile-scss **

// Then add additional custom code here

html,
body {
    font-family: "Montserrat", serif;
    font-optical-sizing: auto;
}

a.changelink {
    padding-left: 16px;
    background: url(../admin/img/icon-changelink.svg) 0 1px no-repeat;
    float: left;
    margin-right: 12px
}

.required-field>label::after {
    content: " * ";
    color: var(--bs-danger);
    font-weight: bold;
    padding-right: 2px;
}

.disabled-link {
    color: gray !important;
    pointer-events: none;
    cursor: default;
}

.large-checkbox {
    width: 1.5em;
    height: 1.5em;
}

.select-break-spaces {
    white-space: break-spaces
}

.hr-separator {
    width: 80px;
    height: 5px;
    background-color: var(--bs-primary);
    margin-bottom: 10px;
}

.force_disabled {
    color: var(--bs-gray) !important;
    pointer-events: none !important;
    background-color: transparent !important;
    border-color: var(--bs-gray) !important;
    opacity: 0.65 !important;
}

.no-opacity {
    opacity: 1 !important;
}

.right-modal {
    top: 0;
    left: 100%;
    width: 400px;
    transform: translateX(100%);
    transition: transform 0.5s ease-in-out;
}

.right-modal.show {
    transform: translateX(-100%);
}

.list-sectors li:before {
    content: "\2022  ";
}

.list-sectors ul:last-child {
    margin-bottom: 0;
}

/* Custom icons  */

[class^="custom-icon"] {
    width: 1em;
    height: 1em;
    display: inline-block;
    vertical-align: middle;
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
    justify-content: flex-end;
    font-family: "bootstrap-icons";
    font-style: normal;
    margin: 0;
}

.custom-icon-pdf {
    background-image: url('/static/images/icons/ico-pdf.svg');
}

.custom-icon-pdf-small {
    background-image: url("/static/images/icons/ico-pdf-small.svg");
}

.custom-icon-versioning {
    background-image: url("/static/images/icons/ico-versioning.svg");
}

.custom-icon-comments {
    background-image: url("/static/images/icons/ico-comments.svg");
}

.custom-icon-view {
    background-image: url("/static/images/icons/ico-view.svg");
}

.custom-icon-log {
    background-image: url('/static/images/icons/ico-log.svg');
}

.custom-icon-user {
    background-image: url('/static/images/icons/ico-user.svg');
}

.custom-icon-profile {
    background-image: url('/static/images/icons/ico-profile.svg');
}

.custom-icon-trash {
    background-image: url('/static/images/icons/ico-trash.svg');
}

.custom-icon-search {
    background-image: url('/static/images/icons/ico-search.svg');
}

.custom-icon-edit {
    background-image: url('/static/images/icons/ico-edit.svg');
}

.custom-icon-duplicate {
    background-image: url('/static/images/icons/ico-duplicate.svg');
}

.custom-icon-submit {
    background-image: url('/static/images/icons/ico-submit.svg');
}

.custom-icon-contact {
    background-image: url('/static/images/icons/ico-contact.svg');
}

.custom-icon-contact-white {
    background-image: url('/static/images/icons/ico-contact-white.svg');
}

.custom-icon-impact-disabled {
    background-image: url('/static/images/icons/ico-impact-disabled.svg');
}

.custom-icon-impact {
    background-image: url('/static/images/icons/ico-impact.svg');
}

.custom-icon-ongoing {
    background-image: url('/static/images/icons/ico-on_going.svg');
}

.custom-icon-closed {
    background-image: url('/static/images/icons/ico-closed.svg');
}

.custom-icon-unsubmitted {
    background-image: url('/static/images/icons/ico-unsubmitted.svg');
}

.custom-icon-unsubmitted-white {
    background-image: url('/static/images/icons/ico-unsubmitted-white.svg');
}


.custom-icon-under-review {
    background-image: url('/static/images/icons/ico-under_review.svg');
}

.custom-icon-under-review-white {
    background-image: url('/static/images/icons/ico-under_review-white.svg');
}

.custom-icon-overdue {
    background-image: url('/static/images/icons/ico-submission_overdue.svg');
}

.custom-icon-overdue-white {
    background-image: url('/static/images/icons/ico-submission_overdue-white.svg');
}


.custom-icon-late-under-review {
    background-image: url('/static/images/icons/ico-late_under_review.svg');
}

.custom-icon-failed {
    background-image: url('/static/images/icons/ico-failed.svg');
}

.custom-icon-failed-sent {
    background-image: url('/static/images/icons/ico-failed-sent.svg');
}

.custom-icon-failed-white {
    background-image: url('/static/images/icons/ico-failed-white.svg');
}


.custom-icon-passed {
    background-image: url('/static/images/icons/ico-passed.svg');
}

.custom-icon-passed-sent {
    background-image: url('/static/images/icons/ico-passed-sent.svg');
}

.custom-icon-passed-white {
    background-image: url('/static/images/icons/ico-passed-white.svg');
}

.custom-icon-not-submitted {
    background-image: url('/static/images/icons/ico-not-submitted.svg');
}

.form-check-input {
    border-color: var(--bs-gray-600);
}

.dropdown-menu.fit-content {
    width: auto !important;
    min-width: unset;
}

.alert-error {
    @extend .alert-danger;
}

.btn-filter-gray {
    --bs-btn-bg: var(--bs-gray-300);
    --bs-btn-border-color: var(--bs-dark);
    --bs-btn-border-radius: .5rem;
    --bs-btn-hover-color: var(--bs-white);
    --bs-btn-hover-bg: var(--bs-secondary);
}

.btn-close-white {
    @extend .btn-close-white;
    border-radius: 50% !important;
    border-width: 3px !important;
    width: 0.5em !important;
    height: 0.5em !important;
    border: 2px solid var(--bs-dark) !important;
    opacity: 1 !important;
}

.btn-close-white:hover {
    opacity: 0.75 !important;
}

table.dataTable thead>tr>th.dt-orderable-asc span.dt-column-order:before,
table.dataTable thead>tr>th.dt-ordering-asc span.dt-column-order:before,
table.dataTable thead>tr>td.dt-orderable-asc span.dt-column-order:before,
table.dataTable thead>tr>td.dt-ordering-asc span.dt-column-order:before {
    content: "❮" !important;
    content: "❮" /"" !important;
    rotate: 90deg !important;

}

table.dataTable thead>tr>th.dt-orderable-desc span.dt-column-order:after,
table.dataTable thead>tr>th.dt-ordering-desc span.dt-column-order:after,
table.dataTable thead>tr>td.dt-orderable-desc span.dt-column-order:after,
table.dataTable thead>tr>td.dt-ordering-desc span.dt-column-order:after {
    content: "❯" !important;
    content: "❯" /"" !important;
    rotate: 90deg !important;
}

.search_icon,
.close_icon {
    border-color: var(--bs-dark);
    padding: 2px;
    background-color: unset;
}

#clearSearch:focus {
    box-shadow: none;
}

#search_bar_form input {
    border-color: var(--bs-dark);
    border-left: unset;
    border-right: unset;
}

#search_bar_form input:focus {
    border-color: var(--bs-dark);
    box-shadow: none;
}

.legend {
    border: 1px solid #000;
    padding: 30px;
    border-radius: 8px;
    width: fit-content;
    margin-top: 30px;
    margin-bottom: 30px;
    width:100%;
    box-sizing: border-box;
    position: relative;
}

.legend-title {
    background-color: var(--bs-body-bg);
    position: absolute;
    top: -10px;
    left: 15px;
    padding: 0 5px;
    font-weight: bold;
}

.legend-item {
    display: flex;
    align-items: center;
    gap: 5px;
    flex: 1;
    justify-content: center;
}

.legend-icon {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    display: inline-block;
}
